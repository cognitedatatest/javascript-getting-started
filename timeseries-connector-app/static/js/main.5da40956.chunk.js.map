{"version":3,"sources":["containers/TimeseriesContainer/TimeseriesContainer.js","components/TimeseriesConnector/TimeseriesConnector.js","index.js"],"names":["PageContainer","styled","div","_templateObject","PageAssets","_templateObject2","PageSeries","_templateObject3","PageButtons","_templateObject4","TimeseriesContainer","state","assetChecked","timeseriesChecked","handleAssetSelect","data","console","log","concat","title","_this","setState","key","handleSeriesSelect","handleSeriesConnect","_callee","changes","seriesString","regenerator_default","a","wrap","_context","prev","next","map","id","update","assetId","set","length","props","client","timeseries","join","notification","open","message","description","duration","info","stop","react_default","createElement","index_es","onSelect","this","onTimeserieSelectionChange","filterRule","es_button","type","onClick","React","Component","TimeseriesConnector_templateObject","TenantSelectorContainer","TimeseriesConnector_templateObject2","TimeseriesConnector","tenant","CogniteClient","appId","onTenantSelected","loginWithOAuth","project","onAuthenticate","POPUP","authenticate","isLoginPopupWindow","loginPopupHandler","initialTenant","isLoggedIn","TimeseriesConnector_PageContainer","containers_TimeseriesContainer_TimeseriesContainer","renderLoginScreen","ReactDOM","render","components_TimeseriesConnector_TimeseriesConnector","document","getElementById"],"mappings":"wvBAKA,IAAMA,EAAgBC,IAAOC,IAAVC,KAObC,EAAaH,IAAOC,IAAVG,KAIVC,EAAaL,IAAOC,IAAVK,KAIVC,EAAcP,IAAOC,IAAVO,KAgFFC,6MA1EbC,MAAQ,CACNC,aAAc,KACdC,kBAAmB,MAGrBC,kBAAoB,SAAAC,GAElBC,QAAQC,IAAR,kBAAAC,OAA8BH,EAAKI,QAEnCC,EAAKC,SAAS,CACZT,aAAcG,EAAKO,SAIvBC,mBAAqB,SAAAV,GACnBO,EAAKC,SAAS,CACZR,yBAIJW,yCAAsB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACdP,EAAUN,EAAKT,MAAME,kBAAkBqB,IAAI,SAAAC,GAC/C,MAAO,CACLA,KACAC,OAAQ,CACNC,QAAS,CACPC,IAAKlB,EAAKT,MAAMC,mBAMZ2B,OAZQ,CAAAR,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAaZb,EAAKoB,MAAMC,OAAOC,WAAWN,OAAOV,GAbxB,OAgBZC,EAAeP,EAAKT,MAAME,kBAAkB8B,KAAK,MACvDC,IAAaC,KAAK,CAChBC,QAAS,yBACTC,YAAW,UAAA7B,OACTE,EAAKT,MAAMC,aADF,kCAAAM,OAEsBS,GACjCqB,SAAU,IAtBMjB,EAAAE,KAAA,eA0BlBa,IAAQG,KAAK,sBA1BK,wBAAAlB,EAAAmB,SAAAzB,8EAiCpB,OACE0B,EAAAtB,EAAAuB,cAACpD,EAAD,KACEmD,EAAAtB,EAAAuB,cAAChD,EAAD,KACE+C,EAAAtB,EAAAuB,cAACC,EAAA,EAAD,CAAWC,SAAUC,KAAKzC,qBAE5BqC,EAAAtB,EAAAuB,cAAC9C,EAAD,KACE6C,EAAAtB,EAAAuB,cAACC,EAAA,EAAD,CACEG,2BAA4BD,KAAKhC,mBACjCkC,WAVW,SAAAf,GAAU,OAAKA,EAAWL,YAazCc,EAAAtB,EAAAuB,cAAC5C,EAAD,KACE2C,EAAAtB,EAAAuB,cAACM,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAASL,KAAK/B,qBAArC,oBAlEwBqC,IAAMC,mTClBxC,IAAM9D,EAAgBC,IAAOC,IAAV6D,KAQbC,EAA0B/D,IAAOC,IAAV+D,KAmDdC,6MA7CbvD,MAAQ,CACNwD,OAAQ,QAEV1B,OAAS,IAAI2B,gBAAc,CAACC,MAAO,2BASnCC,uDAAmB,SAAA7C,EAAM0C,GAAN,OAAAvC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBb,EAAKqB,OAAO8B,eAAe,CACzBC,QAASL,EACTM,eAAgBC,UAHD3C,EAAAE,KAAA,EAKXb,EAAKqB,OAAOkC,eALD,OAMjBvD,EAAKC,SAAS,CAAE8C,WANC,wBAAApC,EAAAmB,SAAAzB,+IANbmD,gCACFC,0EAeF,OACE1B,EAAAtB,EAAAuB,cAACY,EAAD,KACEb,EAAAtB,EAAAuB,cAACC,EAAA,EAAD,CACElC,MAAM,uBACN2D,cAAc,aACdR,iBAAkBf,KAAKe,qDAO7B,IAAMS,EAAmC,OAAtBxB,KAAK5C,MAAMwD,OAC9B,OACEhB,EAAAtB,EAAAuB,cAACC,EAAA,EAAD,CAAmBZ,OAAQc,KAAKd,QAC9BU,EAAAtB,EAAAuB,cAAC4B,EAAD,KACGD,EAAa5B,EAAAtB,EAAAuB,cAAC6B,EAAD,CAAqBxC,OAAQc,KAAKd,SAAYc,KAAK2B,6BAvCzCrB,IAAMC,WCfxCqB,IAASC,OAAOjC,EAAAtB,EAAAuB,cAACiC,EAAD,MAAyBC,SAASC,eAAe","file":"static/js/main.5da40956.chunk.js","sourcesContent":["import React from 'react';\nimport { AssetTree, TimeseriesSearch } from '@cognite/gearbox';\nimport styled from 'styled-components';\nimport { Button, message, notification } from 'antd';\n\nconst PageContainer = styled.div`\n  width: 90vw;\n  height: 80vh;\n  display: flex;\n  justify-content: left;\n`;\n\nconst PageAssets = styled.div`\n  width: 40%;\n`;\n\nconst PageSeries = styled.div`\n  width: 45%;\n`;\n\nconst PageButtons = styled.div`\n  width: 15%;\n  padding: 0 0 0 5px;\n`;\n\nclass TimeseriesContainer extends React.Component {\n  state = {\n    assetChecked: null,\n    timeseriesChecked: []\n  };\n\n  handleAssetSelect = data => {\n    //User actions feedback info\n    console.log(`Asset checked: ${data.title}`);\n\n    this.setState({\n      assetChecked: data.key\n    });\n  };\n\n  handleSeriesSelect = timeseriesChecked => {\n    this.setState({\n      timeseriesChecked\n    });\n  };\n\n  handleSeriesConnect = async () => {\n    const changes = this.state.timeseriesChecked.map(id => {\n      return {\n        id,\n        update: {\n          assetId: {\n            set: this.state.assetChecked,\n          },\n        },\n      };\n    });\n\n    if (changes.length) {\n      await this.props.client.timeseries.update(changes);\n\n      //User actions feedback info\n      const seriesString = this.state.timeseriesChecked.join(', ');\n      notification.open({\n        message: 'Successfully connected',\n        description: `Asset: ${\n          this.state.assetChecked\n        } was connected to Timeseries: ${seriesString}`,\n        duration: 3\n      });\n    } else {\n      //User actions feedback info\n      message.info('Nothing to connect');\n    }\n  };\n\n  render() {\n    const filterRule = timeseries => !timeseries.assetId;\n\n    return (\n      <PageContainer>\n        <PageAssets>\n          <AssetTree onSelect={this.handleAssetSelect} />\n        </PageAssets>\n        <PageSeries>\n          <TimeseriesSearch\n            onTimeserieSelectionChange={this.handleSeriesSelect}\n            filterRule={filterRule}\n          />\n        </PageSeries>\n        <PageButtons>\n          <Button type='primary' onClick={this.handleSeriesConnect}>\n            Connect\n          </Button>\n        </PageButtons>\n      </PageContainer>\n    );\n  }\n}\n\nexport default TimeseriesContainer;\n","import React from 'react';\nimport { ClientSDKProvider, TenantSelector } from '@cognite/gearbox';\nimport { CogniteClient, isLoginPopupWindow, loginPopupHandler, POPUP } from '@cognite/sdk';\nimport TimeseriesContainer from '../../containers/TimeseriesContainer/TimeseriesContainer';\nimport styled from 'styled-components';\nimport 'antd/dist/antd.css';\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TenantSelectorContainer = styled.div`\n  max-width: 600px;\n  min-width: 400px;\n`;\n\nclass TimeseriesConnector extends React.Component {\n  state = {\n    tenant: null,\n  };\n  client = new CogniteClient({appId: 'charting-app-example'});\n\n  componentDidMount() {\n    if (isLoginPopupWindow()) {\n      loginPopupHandler();\n      return;\n    }\n  }\n\n  onTenantSelected = async tenant => {\n    this.client.loginWithOAuth({\n      project: tenant,\n      onAuthenticate: POPUP,\n    });\n    await this.client.authenticate();\n    this.setState({ tenant });\n  };\n\n  renderLoginScreen() {\n    return (\n      <TenantSelectorContainer>\n        <TenantSelector\n          title=\"Timeseries Connector\"\n          initialTenant=\"publicdata\"\n          onTenantSelected={this.onTenantSelected}\n        />\n      </TenantSelectorContainer>\n    );\n  }\n\n  render() {\n    const isLoggedIn = this.state.tenant !== null;\n    return (\n      <ClientSDKProvider client={this.client}>\n        <PageContainer>\n          {isLoggedIn ? <TimeseriesContainer client={this.client}/> : this.renderLoginScreen()}\n        </PageContainer>\n      </ClientSDKProvider>\n    );\n  }\n}\n\nexport default TimeseriesConnector;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TimeseriesConnector from './components/TimeseriesConnector/TimeseriesConnector';\n\nReactDOM.render(<TimeseriesConnector />, document.getElementById('root'));\n"],"sourceRoot":""}