{"version":3,"sources":["components/Layout.js","components/App.js","index.js"],"names":["Wrapper","styled","_templateObject","Header","_templateObject2","Body","_templateObject3","SearchWrapper","_templateObject4","ActionsWrapper","_templateObject5","Layout","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","cache","state","asset","modelID","revisionID","onLiveSearchSelect","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","setState","stop","_x","reset","inherits","createClass","key","value","_componentDidMount","_callee2","client","models","revisions","_context2","props","models3D","list","autoPagingToArray","sent","notification","error","description","message","abrupt","id","revisions3D","_this$state","react_default","createElement","index_es","es_button","disabled","onClick","modelId","revisionId","assetId","React","Component","LoginWrapper","App_templateObject","App","tenant","CogniteClient","appId","onTenantSelected","loginWithOAuth","project","onAuthenticate","POPUP","authenticate","isLoginPopupWindow","loginPopupHandler","header","title","initialTenant","isLoggedIn","Layout_Layout","renderLoginScreen","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.51b2f123.chunk.js","sourcesContent":["import { Button, notification } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { AssetSearch, AssetScanner, Model3DViewer } from '@cognite/gearbox';\n\nconst Wrapper = styled('div')`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n`;\n\nconst Header = styled('div')`\n  display: flex;\n  padding: 10px;\n  background-color: blue;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Body = styled('div')`\n  padding: 10px;\n  position: relative;\n  flex: 1;\n  display: flex;\n  z-index: 0;\n\n  > div {\n    height: 100% !important;\n    width: 100% !important;\n  }\n`;\n\nconst SearchWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n`;\n\nconst ActionsWrapper = styled('div')`\n  flex: 0;\n  margin-left: 5px;\n`;\n\nexport class Layout extends React.Component {\n  cache = {};\n  state = {\n    asset: null,\n    modelID: null,\n    revisionID: null,\n  };\n\n  async componentDidMount() {\n    const { client } = this.props;\n    const models = await client.models3D.list().autoPagingToArray();\n\n    if (!models.length) {\n      notification.error({\n        description: 'Your Tenant doesn\\'t have any models',\n        message: 'Fail fetch models list',\n      });\n\n      return;\n    }\n\n    const { id: modelID } = models[0];\n    const revisions = await client.revisions3D.list(modelID).autoPagingToArray();\n\n    if (!revisions.length) {\n      notification.error({\n        description: 'Model has no revisions',\n        message: 'Fail fetch revisions list',\n      });\n\n      return;\n    }\n\n    const { id: revisionID } = revisions[0];\n\n    this.setState({ modelID, revisionID });\n  }\n\n  onLiveSearchSelect = async asset => {\n    this.setState({ asset });\n  };\n\n  reset = () => this.setState({ asset: null });\n\n  render() {\n    const { asset, modelID, revisionID } = this.state;\n\n    return (\n      <Wrapper>\n        <Header>\n          <SearchWrapper>\n            <AssetSearch onLiveSearchSelect={this.onLiveSearchSelect} />\n          </SearchWrapper>\n          <ActionsWrapper>\n            <Button disabled={!asset} onClick={this.reset}>\n              Scanner\n            </Button>\n          </ActionsWrapper>\n        </Header>\n        <Body>\n          {asset && modelID && revisionID ? (\n            <Model3DViewer\n              modelId={modelID}\n              revisionId={revisionID}\n              assetId={asset.id}\n              cache={this.cache}\n            />\n          ) : (\n            <AssetScanner />\n          )}\n        </Body>\n      </Wrapper>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ClientSDKProvider, TenantSelector } from '@cognite/gearbox';\nimport { CogniteClient, isLoginPopupWindow, loginPopupHandler, POPUP } from '@cognite/sdk';\nimport { Layout } from './Layout';\n\nconst LoginWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 50px 0 0;\n\n  > * {\n    width: 400px;\n  }\n`;\n\nclass App extends React.Component {\n  state = {\n    tenant: null,\n  };\n  client = new CogniteClient({appId: 'charting-app-example'});\n\n  componentDidMount() {\n    if (isLoginPopupWindow()) {\n      loginPopupHandler();\n      return;\n    }\n  }\n\n  onTenantSelected = async tenant => {\n    this.client.loginWithOAuth({\n      project: tenant,\n      onAuthenticate: POPUP,\n    });\n    await this.client.authenticate();\n    this.setState({ tenant });\n  };\n\n  renderLoginScreen() {\n    return (\n      <LoginWrapper>\n        <TenantSelector\n          header={'Type tenant name'}\n          title=\"3D Localizator\"\n          initialTenant=\"publicdata\"\n          onTenantSelected={this.onTenantSelected}\n        />\n      </LoginWrapper>\n    );\n  }\n\n  render() {\n    const isLoggedIn = this.state.tenant !== null;\n    return (\n      <ClientSDKProvider client={this.client}>\n        {isLoggedIn ? <Layout client={this.client}/> : this.renderLoginScreen()}\n      </ClientSDKProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}