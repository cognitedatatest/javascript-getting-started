{"version":3,"sources":["Explorer.js","App.js","index.js"],"names":["Header","Layout","Footer","Content","Explorer","state","selectedAssetID","isTreeVisible","asset","this","setState","key","style","color","fontSize","type","onClick","padding","display","onSelect","assetId","href","React","Component","App","props","client","CogniteClient","appId","loginWithOAuth","project","authenticate","ReactDOM","render","document","getElementById"],"mappings":"6VAKQA,G,OAA4BC,IAA5BD,QAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAyDTC,E,2MAtDbC,MAAQ,CACNC,gBAAiB,KACjBC,eAAe,G,iFAGCC,GAChBC,KAAKC,SAAS,CAAEJ,gBAAiBE,EAAMG,Q,+BAG/B,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAACX,EAAD,CAAQY,MAAO,CAAEC,MAAO,QAASC,SAAU,WACvCL,KAAKJ,MAAME,eACX,kBAAC,IAAD,CACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKN,SAAS,CAAEH,eAAe,MAE9C,kBAAC,IAAD,CAAMQ,KAAK,SAJb,QASDN,KAAKJ,MAAME,cACR,aADH,mBAEeE,KAAKJ,MAAMC,kBAE7B,kBAACH,EAAD,CAASS,MAAO,CAAEK,QAAS,SACzB,yBAAKL,MAAO,CAAEM,QAAST,KAAKJ,MAAME,cAAgB,QAAU,SAC1D,kBAAC,IAAD,CACEY,SAAU,SAAAX,GACR,EAAKE,SAAS,CACZJ,gBAAiBE,EAAMG,IACvBJ,eAAe,QAMvB,yBAAKK,MAAO,CAAEM,QAAST,KAAKJ,MAAME,cAAgB,OAAS,UACzD,kBAAC,IAAD,CAAWa,QAASX,KAAKJ,MAAMC,oBAGnC,kBAACJ,EAAD,iBACY,IACV,uBAAGmB,KAAK,mCAAR,sC,GA9CaC,IAAMC,WCoCdC,E,YAjCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDpB,MAAQ,CACXqB,OAAQ,MAJO,E,wMASXA,EAAS,IAAIC,gBAAc,CAC/BC,MAdS,yBAiBJC,eAAe,CAAEC,QAhBT,e,SAiBTJ,EAAOK,e,OACbtB,KAAKC,SAAS,CAAEgB,W,qIAIhB,OACE,6BACGjB,KAAKJ,MAAMqB,QACV,kBAAC,IAAD,CAAmBA,OAAQjB,KAAKJ,MAAMqB,QACpC,kBAAC,EAAD,QAIFjB,KAAKJ,MAAMqB,QAAU,qD,GA5BbJ,IAAMC,WCJxBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9af049e4.chunk.js","sourcesContent":["import React from \"react\";\nimport { AssetTree, AssetMeta } from \"@cognite/gearbox\";\nimport { Button, Icon, Layout } from \"antd\";\nimport \"antd/dist/antd.css\";\n\nconst { Header, Footer, Content } = Layout;\n\nclass Explorer extends React.Component {\n  state = {\n    selectedAssetID: null,\n    isTreeVisible: true\n  };\n\n  handleAssetSelect(asset) {\n    this.setState({ selectedAssetID: asset.key });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Header style={{ color: \"white\", fontSize: \"1.4em\" }}>\n          {!this.state.isTreeVisible && (\n            <Button\n              type=\"danger\"\n              onClick={() => this.setState({ isTreeVisible: true })}\n            >\n              <Icon type=\"left\" />\n              Back\n            </Button>\n          )}\n\n          {this.state.isTreeVisible\n            ? \"All assets\"\n            : `  Asset #${this.state.selectedAssetID}`}\n        </Header>\n        <Content style={{ padding: \"10px\" }}>\n          <div style={{ display: this.state.isTreeVisible ? \"block\" : \"none\" }}>\n            <AssetTree\n              onSelect={asset => {\n                this.setState({\n                  selectedAssetID: asset.key,\n                  isTreeVisible: false\n                });\n              }}\n            />\n          </div>\n\n          <div style={{ display: this.state.isTreeVisible ? \"none\" : \"block\" }}>\n            <AssetMeta assetId={this.state.selectedAssetID} />\n          </div>\n        </Content>\n        <Footer>\n          Data from{\" \"}\n          <a href=\"https://openindustrialdata.com/\">\n            Open Industrial Data project\n          </a>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default Explorer;\n","import React from \"react\";\nimport { CogniteClient } from \"@cognite/sdk\";\nimport { ClientSDKProvider } from \"@cognite/gearbox\";\nimport Explorer from \"./Explorer\";\nimport \"antd/dist/antd.css\";\n\nconst APP_ID = \"hello-cdf-gearboxjs\";\nconst PROJECT_ID = \"publicdata\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      client: null\n    };\n  }\n\n  async componentDidMount() {\n    const client = new CogniteClient({\n      appId: APP_ID\n    });\n\n    client.loginWithOAuth({ project: PROJECT_ID });\n    await client.authenticate();\n    this.setState({ client });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.client && (\n          <ClientSDKProvider client={this.state.client}>\n            <Explorer />\n          </ClientSDKProvider>\n        )}\n\n        {!this.state.client && <div>Please wait ...</div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}