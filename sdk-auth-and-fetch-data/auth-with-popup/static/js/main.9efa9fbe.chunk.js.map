{"version":3,"sources":["App.js","index.js"],"names":["App","state","assets","client","fetchAssets","_callee","regenerator_default","a","wrap","_context","prev","next","_this","list","autoPagingToArray","limit","sent","setState","stop","renderAssets","react_default","createElement","Fragment","map","asset","key","id","name","isLoginPopupWindow","loginPopupHandler","CogniteClient","appId","loginWithOAuth","project","onAuthenticate","POPUP","this","className","onClick","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4QAqDeA,6MA/CbC,MAAQ,CACNC,OAAQ,KACRC,OAAQ,QAiBVC,iCAAc,SAAAC,IAAA,IAAAF,EAAAD,EAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJR,EAAWS,EAAKX,MAAhBE,OADIM,EAAAE,KAAA,EAESR,EAAOD,OAAOW,OAAOC,kBAAkB,CAAEC,MAAO,KAFzD,OAENb,EAFMO,EAAAO,KAGZJ,EAAKK,SAAS,CAAEf,WAHJ,wBAAAO,EAAAS,SAAAb,QAMdc,aAAe,WACb,OACEC,EAAAb,EAAAc,cAAAD,EAAAb,EAAAe,SAAA,KACGV,EAAKX,MAAMC,OAAOqB,IAAI,SAAAC,GAAK,OAC1BJ,EAAAb,EAAAc,cAAA,KAAGI,IAAKD,EAAME,IACXF,EAAMG,+MAxBZC,sDACDC,yDAII1B,EAAS,IAAI2B,gBAAc,CAAEC,MAAO,0BACnCC,eAAe,CACpBC,QAhBU,aAiBVC,eAAgBC,UAElBC,KAAKnB,SAAS,CAAEd,8IAqBT,IACCD,EAAWkC,KAAKnC,MAAhBC,OACR,OACEkB,EAAAb,EAAAc,cAAA,OAAKgB,UAAU,OACZnC,EAASkC,KAAKjB,eAAiBC,EAAAb,EAAAc,cAAA,UAAQiB,QAASF,KAAKhC,aAAagB,EAAAb,EAAAc,cAAA,8DA1CzDkB,aCAlBC,IAASC,OAAOrB,EAAAb,EAAAc,cAACqB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9efa9fbe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { CogniteClient, POPUP, loginPopupHandler, isLoginPopupWindow } from '@cognite/sdk';\n\nconst project = 'publicdata';\n\nclass App extends Component {\n  state = {\n    assets: null,\n    client: null\n  }\n\n  async componentDidMount() {\n    if(isLoginPopupWindow()) {\n      loginPopupHandler();\n      return;\n    }\n\n    const client = new CogniteClient({ appId: 'Cognite SDK tutorial' });\n    client.loginWithOAuth({\n      project,\n      onAuthenticate: POPUP\n    });\n    this.setState({ client });\n  }\n\n  fetchAssets = async () => {\n    const { client } = this.state;\n    const assets = await client.assets.list().autoPagingToArray({ limit: 10 });\n    this.setState({ assets });\n  }\n\n  renderAssets = () => {\n    return (\n      <>\n        {this.state.assets.map(asset => (\n          <p key={asset.id}>\n            {asset.name}\n          </p>\n        ))}\n      </>\n    )\n  }\n\n  render() {\n    const { assets } = this.state;\n    return (\n      <div className=\"App\">  \n        {assets ? this.renderAssets() : <button onClick={this.fetchAssets}><h1>Click here to fetch assets from Cognite</h1></button>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}