{"version":3,"sources":["containers/AssetExplorerContainer/AssetExplorerContainer.js","components/AssetExplorer/AssetExplorer.js","index.js"],"names":["PageContainer","styled","div","_templateObject","PageBar","_templateObject2","PageAssets","_templateObject3","PageSearch","_templateObject4","PageMeta","_templateObject5","AssetExplorerContainer","state","assetCheckedId","handleSearchAssetSelect","data","_this","setState","id","handleAssetSelect","key","this","react_default","a","createElement","index_es","onLiveSearchSelect","onSelect","assetId","React","Component","AssetExplorer_templateObject","TenantSelectorContainer","AssetExplorer_templateObject2","AssetExplorer","tenant","client","CogniteClient","appId","onTenantSelected","_callee","regenerator_default","wrap","_context","prev","next","loginWithOAuth","project","onAuthenticate","POPUP","authenticate","stop","isLoginPopupWindow","loginPopupHandler","title","initialTenant","isLoggedIn","AssetExplorer_PageContainer","containers_AssetExplorerContainer_AssetExplorerContainer","renderLoginScreen","ReactDOM","render","components_AssetExplorer_AssetExplorer","document","getElementById"],"mappings":"wgCAIA,IAAMA,EAAgBC,IAAOC,IAAVC,KAQbC,EAAUH,IAAOC,IAAVG,KAKPC,EAAaL,IAAOC,IAAVK,KAMVC,EAAaP,IAAOC,IAAVO,KAMVC,EAAWT,IAAOC,IAAVS,KA+CCC,6MAvCbC,MAAQ,CACNC,eAAgB,QAGlBC,wBAA0B,SAAAC,GACxBC,EAAKC,SAAS,CACZJ,eAAgBE,EAAKG,QAIzBC,kBAAoB,SAAAJ,GAClBC,EAAKC,SAAS,CACZJ,eAAgBE,EAAKK,+EAIhB,IACCP,EAAmBQ,KAAKT,MAAxBC,eAER,OACES,EAAAC,EAAAC,cAACzB,EAAD,KACEuB,EAAAC,EAAAC,cAACrB,EAAD,MACAmB,EAAAC,EAAAC,cAACnB,EAAD,KACEiB,EAAAC,EAAAC,cAACjB,EAAD,KACEe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,mBAAoBL,KAAKP,2BAExCQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,SAAUN,KAAKF,qBAE5BG,EAAAC,EAAAC,cAACf,EAAD,KACGI,EACCS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWG,QAASf,IAEpBS,EAAAC,EAAAC,cAAA,qEAjCyBK,IAAMC,mTC7B3C,IAAM/B,EAAgBC,IAAOC,IAAV8B,KAQbC,EAA0BhC,IAAOC,IAAVgC,KAmDdC,6MA7CbtB,MAAQ,CACNuB,OAAQ,QAEVC,OAAS,IAAIC,gBAAc,CAAEC,MAAO,6BASpCC,uDAAmB,SAAAC,EAAML,GAAN,OAAAM,EAAAlB,EAAAmB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjB7B,EAAKoB,OAAOU,eAAe,CACzBC,QAASZ,EACTa,eAAgBC,UAHDN,EAAAE,KAAA,EAKX7B,EAAKoB,OAAOc,eALD,OAMjBlC,EAAKC,SAAS,CAAEkB,WANC,wBAAAQ,EAAAQ,SAAAX,+IANbY,gCACFC,0EAeF,OACE/B,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6B,MAAM,qBACNC,cAAc,aACdhB,iBAAkBlB,KAAKkB,qDAO7B,IAAMiB,EAAmC,OAAtBnC,KAAKT,MAAMuB,OAC9B,OACEb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBW,OAAQf,KAAKe,QAC9Bd,EAAAC,EAAAC,cAACiC,EAAD,KACGD,EAAalC,EAAAC,EAAAC,cAACkC,EAAD,MAA4BrC,KAAKsC,6BAvC7B9B,IAAMC,WCflC8B,IAASC,OAAOvC,EAAAC,EAAAC,cAACsC,EAAD,MAAmBC,SAASC,eAAe","file":"static/js/main.2293ec13.chunk.js","sourcesContent":["import React from 'react';\nimport { AssetSearch, AssetTree, AssetMeta } from '@cognite/gearbox';\nimport styled from 'styled-components';\n\nconst PageContainer = styled.div`\n  background-color: #00253a;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PageBar = styled.div`\n  background-color: #00253a;\n  width: 80px;\n`;\n\nconst PageAssets = styled.div`\n  width: 35%;\n  overflow: auto;\n  background-color: #e6ebf3;\n`;\n\nconst PageSearch = styled.div`\n  height: 64px;\n  padding: 16px;\n  background-color: #c7cdd8;\n`;\n\nconst PageMeta = styled.div`\n  width: 62%\n  overflow: auto;\n  padding: 10px 0 0 15px;\n  background-color:#F0F2F5\n`;\n\nclass AssetExplorerContainer extends React.Component {\n  state = {\n    assetCheckedId: null\n  };\n\n  handleSearchAssetSelect = data => {\n    this.setState({\n      assetCheckedId: data.id\n    });\n  };\n\n  handleAssetSelect = data => {\n    this.setState({\n      assetCheckedId: data.key\n    });\n  };\n\n  render() {\n    const { assetCheckedId } = this.state;\n\n    return (\n      <PageContainer>\n        <PageBar />\n        <PageAssets>\n          <PageSearch>\n            <AssetSearch onLiveSearchSelect={this.handleSearchAssetSelect} />\n          </PageSearch>\n          <AssetTree onSelect={this.handleAssetSelect} />\n        </PageAssets>\n        <PageMeta>\n          {assetCheckedId ? (\n            <AssetMeta assetId={assetCheckedId} />\n          ) : (\n            <p>Please select a node from the list to the left.</p>\n          )}\n        </PageMeta>\n      </PageContainer>\n    );\n  }\n}\nexport default AssetExplorerContainer;\n","import React from 'react';\nimport { ClientSDKProvider, TenantSelector } from '@cognite/gearbox';\nimport { CogniteClient, isLoginPopupWindow, loginPopupHandler, POPUP } from '@cognite/sdk';\nimport AssetExplorerContainer from '../../containers/AssetExplorerContainer/AssetExplorerContainer';\nimport styled from 'styled-components';\nimport 'antd/dist/antd.css';\n\nconst PageContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TenantSelectorContainer = styled.div`\n  max-width: 600px;\n  min-width: 400px;\n`;\n\nclass AssetExplorer extends React.Component {\n  state = {\n    tenant: null,\n  };\n  client = new CogniteClient({ appId: 'asset-explorer-example' });\n\n  componentDidMount() {\n    if (isLoginPopupWindow()) {\n      loginPopupHandler();\n      return;\n    }\n  }\n\n  onTenantSelected = async tenant => {\n    this.client.loginWithOAuth({\n      project: tenant,\n      onAuthenticate: POPUP,\n    });\n    await this.client.authenticate();\n    this.setState({ tenant });\n  };\n\n  renderLoginScreen() {\n    return (\n      <TenantSelectorContainer>\n        <TenantSelector\n          title=\"Asset Explorer app\"\n          initialTenant=\"publicdata\"\n          onTenantSelected={this.onTenantSelected}\n        />\n      </TenantSelectorContainer>\n    );\n  }\n\n  render() {\n    const isLoggedIn = this.state.tenant !== null;\n    return (\n      <ClientSDKProvider client={this.client}>\n        <PageContainer>\n          {isLoggedIn ? <AssetExplorerContainer/> : this.renderLoginScreen()}\n        </PageContainer>\n      </ClientSDKProvider>\n    );\n  }\n}\n\nexport default AssetExplorer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AssetExplorer from \"./components/AssetExplorer/AssetExplorer\";\n\nReactDOM.render(<AssetExplorer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}